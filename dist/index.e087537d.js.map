{"mappings":"AAIA,MAAMA,KAOFC,YAAYC,EAAYC,EAAcC,EAAeC,EAAkBC,GACnEC,KAAKL,GAAKA,EACVK,KAAKJ,KAAOA,EACZI,KAAKH,MAAQA,EACbG,KAAKF,SAAWA,EAChBE,KAAKD,MAAQA,CACjB,EAQJ,IAAIE,KAAe,GAGfC,cAA+BC,aAAaC,QAAQ,QAexD,SAASC,SAELC,UAEAC,UAEJ,CAGA,SAASA,WAEL,IAAIC,EAAa,EAEjBC,SAASC,eAAe,cAAcC,iBAAiB,SAAS,WAC5DC,gBACJ,IAEA,IAAIC,EAAgBJ,SAASK,cAAc,mBAC3CD,EAAcE,UAAY,GAE1B,IAAK,IAAIC,KAAQf,KAAM,CAEnBO,GAAcQ,EAAKlB,SAEnB,IAAImB,EAAW,iDAcmBD,EAAArB,uCACXqB,EAAIjB,eAAAiB,EAAApB,+GAGRoB,EAAArB,+BAA4BqB,EAAApB,4DACvDoB,EAAAnB,MAAAqB,QAAA,kIAI+CF,EAAArB,8BAAAqB,EAAAlB,iGAC+BkB,EAAArB,wGAC1EqB,EAAArB,iDAMAkB,EAAaE,WAAgBE,CACjC,CAEAR,SAASK,cAAuB,gBAAgBC,UAAAP,C,UAE5CW,eAAAC,EAAAC,GACAD,EAAIE,iBAGJrB,KAAIsB,MAAAC,GAAQA,EAAK7B,IAAA0B,IAAUvB,SAAa2B,SAAAhB,SAAAK,cAAA,YAAAO,GAAAK,OACxCC,gBACApB,U,CAEJ,SAAAoB,gBAGAxB,aAASyB,QAAsB,OAAcC,KAAeC,UAAe7B,M,UAInE8B,WAAYX,EAAAC,G,EACZC,iBAIAb,SAAiBK,cAAI,aAAAO,GAGzBW,SACA,IAAAC,EAAAhC,KAAAiC,WAAAV,KAAA7B,IAAA0B,IACJpB,KAAAkC,OAAAF,EAAA,GAGAN,gBACIpB,UACJ,CAGA,SAAA6B,UAAAzC,EAAAC,EAAAC,EAAAE,GACA,IAAAsC,EAAApC,KAAAsB,MAAAC,GAA+BA,EAAA7B,QAE/B,GAAmB2C,MAAnBD,EAAmB,CAEf,IAAME,EAAU,IAAA9C,KAASE,EAAAC,EAAAC,EAAc,EAAAE,GACvCE,KAAMuC,KAAAD,EACN,MAAMF,EAAOvC,UAAS,EACtB6B,gBAEApB,U,UAEIK,iB,SACAF,eAAmB,cAAO+B,UAAAC,OAAA,iB,UAK1BpC,U,MACAqC,EAASlC,SAAKK,cAAiB,mBAC/B8B,EAAanC,SAAMK,cAAO,kBAC1B+B,EAAApC,SAAkBK,cAAS,cAC/BgC,EAAArC,SAAAK,cAAA,cAEJ6B,EAAAhC,iBAAA,c,wPAlIsB,OAAlBT,gBACAA,cAAgB,IAGpBD,KAAO4B,KAAKkB,MAAM7C,eAAe8C,KAAKC,GAC3B,IAAIxD,KACPwD,EAAStD,GACTsD,EAASrD,KACTqD,EAASpD,MACToD,EAASnD,SACTmD,EAASlD","sources":["src/main.ts"],"sourcesContent":["//import { Cart } from \"./class.js\";\r\n///import bilder from './bilder/*';\r\n\r\n\r\nclass Cart {\r\n    id: number\r\n    name: string\r\n    price: number\r\n    quantity: number\r\n    image: string\r\n\r\n    constructor(id: number, name: string, price: number, quantity: number, image: string) {\r\n        this.id = id;\r\n        this.name = name;\r\n        this.price = price;\r\n        this.quantity = quantity;\r\n        this.image = image;\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nlet cart: Cart[] = [];\r\n\r\n\r\nlet cartInStorage: string | null = localStorage.getItem('cart')\r\n\r\nif (cartInStorage === null) {\r\n    cartInStorage = ''\r\n}\r\n\r\ncart = JSON.parse(cartInStorage).map((cartItem: Cart) => {\r\n    return new Cart(\r\n        cartItem.id,\r\n        cartItem.name,\r\n        cartItem.price,\r\n        cartItem.quantity,\r\n        cartItem.image);\r\n});\r\n\r\nfunction loadjs() {\r\n\r\n    loadNav();\r\n\r\n    loadCart();\r\n\r\n}\r\n\r\n\r\nfunction loadCart() {\r\n\r\n    let totalItems = 0;\r\n\r\n    document.getElementById('cart-icon')?.addEventListener('click', function () {\r\n        toggleCartList()\r\n    });\r\n\r\n    let cartContainer = document.querySelector('.cart-container');\r\n    cartContainer.innerHTML = '';\r\n\r\n    for (let item of cart) {\r\n\r\n        totalItems += item.quantity;\r\n\r\n        let itemHTML = `\r\n        <div class=\"cart-item\" id=\"cart-item${item.id}\">\r\n          <img src=\"../bilder/${item.image}\" alt=\"${item.name}\" class=\"cart-item__image\">\r\n          <div class=\"cart-item__details\">\r\n            <span id=\"item-name${item.id}\" class=\"cart-item__name\">${item.name}</span>\r\n            <span class=\"cart-item__price\">$${item.price.toFixed(2)}</span>\r\n          </div>\r\n            <label for=\"quantity\">Quantity:</label>\r\n            <input type=\"number\" id=\"quantity${item.id}\" name=\"quantity\" value=\"${item.quantity}\" />\r\n            <button class=\"cart-item__update-btn\" onclick=\"updateQuantity(event,${item.id})\" > Update </button>\r\n            <button class=\"cart-item__remove-btn\" onclick=\"removeItem(event,${item.id})\"> Remove </button>\r\n        </div>\r\n      `;\r\n\r\n        // append the itemHTML to the cart\r\n        cartContainer.innerHTML += itemHTML;\r\n    }\r\n\r\n    document.querySelector(\".cart__total\").innerHTML = totalItems;\r\n}\r\n\r\nfunction updateQuantity(event: any, itemId: number) {\r\n    event.preventDefault();\r\n    // Update the item quantity and total price\r\n    cart.find(x => x.id == itemId).quantity = parseInt(document.querySelector('#quantity' + itemId).value);\r\n    updateStorage();\r\n    loadCart();\r\n\r\n}\r\n\r\nfunction updateStorage() {\r\n    localStorage.setItem('cart', JSON.stringify(cart));\r\n}\r\n\r\nfunction removeItem(event: any, itemId: number) {\r\n    event.preventDefault();\r\n    // Remove the item from the cart\r\n    let cartItem = document.querySelector('#cart-item' + itemId);\r\n    cartItem.remove();\r\n\r\n    let index = cart.findIndex(x => x.id == itemId);\r\n    cart.splice(index, 1);\r\n    updateStorage();\r\n    loadCart();\r\n}\r\n\r\n\r\nfunction addToCart(id: number, name: string, price: number, image: string) {\r\n\r\n    let isInCart = cart.find(x => x.id == id);\r\n\r\n    if (isInCart == undefined) {\r\n        let newItem = new Cart(id, name, price, 1, image);\r\n        cart.push(newItem);\r\n    }\r\n    else {\r\n        isInCart.quantity += 1;\r\n    }\r\n\r\n    updateStorage();\r\n    loadCart();\r\n}\r\n\r\n\r\nfunction toggleCartList() {\r\n    document.getElementById('cart-list')?.classList.toggle(\"cart-list-view\");\r\n}\r\n\r\n\r\n// document.addEventListener('DOMContentLoaded', loadNav(), false);\r\n// window.onload = \"loadNav()\";\r\n\r\nfunction loadNav() {\r\n\r\n    const navOpen = document.querySelector(\".nav__hamburger\");\r\n    const navClose = document.querySelector(\".close__toggle\");\r\n    const menu = document.querySelector(\".nav__menu\");\r\n    const navContainer = document.querySelector(\".nav__menu\");\r\n\r\n    navOpen.addEventListener(\"click\", () => {\r\n        menu.classList.add(\"open\");\r\n        document.body.classList.add(\"active\");\r\n        navContainer.style.left = \"0\";\r\n        navContainer.style.width = \"30rem\";\r\n    });\r\n\r\n    navClose.addEventListener(\"click\", () => {\r\n        menu.classList.remove(\"open\");\r\n        document.body.classList.remove(\"active\");\r\n        navContainer.style.left = \"-30rem\";\r\n        navContainer.style.width = \"0\";\r\n    });\r\n\r\n}"],"names":["Cart","constructor","id","name","price","quantity","image","this","cart","cartInStorage","localStorage","getItem","loadjs","loadNav","loadCart","totalItems","document","getElementById","addEventListener","toggleCartList","cartContainer","querySelector","innerHTML","item","itemHTML","toFixed","updateQuantity","event","itemId","preventDefault","find","x","parseInt","value","updateStorage","setItem","JSON","stringify","removeItem","remove","index","findIndex","splice","addToCart","isInCart","undefined","newItem","push","classList","toggle","navOpen","navClose","menu","navContainer","parse","map","cartItem"],"version":3,"file":"index.e087537d.js.map"}